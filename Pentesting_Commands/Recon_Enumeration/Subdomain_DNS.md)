üîç Filter Cookbook
1. Subdomain & DNS Enumeration

Subdomain and DNS enumeration help uncover hidden infrastructure, staging environments, and forgotten assets that attackers often exploit. Below are common approaches with both Linux and Windows commands.

üåê 1.1 DNS Lookup
Linux
# Basic A record lookup
dig example.com

# Lookup all records (A, MX, TXT, NS)
dig example.com ANY

# Query specific record type (e.g., MX)
dig MX example.com

# Reverse lookup (IP ‚Üí domain)
dig -x 8.8.8.8

Windows
# Basic A record lookup
nslookup example.com

# Query MX record
nslookup -query=mx example.com

# Query TXT record
nslookup -type=txt example.com

# Reverse lookup
nslookup 8.8.8.8

üåê 1.2 Zone Transfer (AXFR) Test

‚ö†Ô∏è Useful for identifying misconfigured DNS servers.

Linux
# Attempt full zone transfer
dig AXFR example.com @ns1.example.com

Windows
# Attempt zone transfer with nslookup
nslookup
> server ns1.example.com
> ls -d example.com

üåê 1.3 Subdomain Enumeration
Linux
# Using a wordlist with dig + grep
for sub in $(cat subdomains.txt); do
    dig +short ${sub}.example.com | grep -v "NXDOMAIN"
done

# Subfinder (fast automation)
subfinder -d example.com

Windows
# Using a wordlist with nslookup
foreach ($sub in Get-Content .\subdomains.txt) {
    try {
        nslookup "$sub.example.com"
    } catch {}
}

# If Subfinder is installed on Windows
subfinder -d example.com

üåê 1.4 Reverse DNS & PTR Sweeps
Linux
# Check PTR records for a range
for ip in $(seq 1 254); do
    host 192.168.1.$ip | grep "domain name pointer"
done

Windows
# Reverse lookup on IP range
1..254 | ForEach-Object {
    try {
        [System.Net.Dns]::GetHostEntry("192.168.1.$_")
    } catch {}
}
