import subprocess
from rich.console import Console
from rich.table import Table
from rich.panel import Panel
import os

console = Console()

def run_nikto(target, port=None, ssl=False, output_file=None):
    """
    Run Nikto against a target host and display results in a Rich TUI.
    
    :param target: Target domain or IP
    :param port: Port number (default: 80 or 443 with --ssl)
    :param ssl: Enable SSL scan (default: False)
    :param output_file: Save output to file (txt, html, xml, csv)
    """
    # Build command
    cmd = ["nikto", "-h", target]

    if port:
        cmd.extend(["-p", str(port)])
    if ssl:
        cmd.append("-ssl")
    if output_file:
        cmd.extend(["-o", output_file])

    console.print(f"[bold yellow]Running Nikto scan on:[/bold yellow] {target}\n")
    try:
        # Run Nikto
        process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        
        findings = []
        for line in process.stdout:
            if "+" in line or "-" in line:  # filter real results
                findings.append(line.strip())

        # Display results
        if findings:
            table = Table(title=f"Nikto Results for {target}")
            table.add_column("Issue", style="red", no_wrap=False)
            
            for finding in findings:
                table.add_row(finding)

            console.print(table)
        else:
            console.print(Panel("No issues detected or Nikto returned no results.", style="green"))

        # Save results if output file specified
        if output_file:
            console.print(f"[bold cyan]Results saved to:[/bold cyan] {os.path.abspath(output_file)}")

    except FileNotFoundError:
        console.print("[bold red]Error: Nikto not found. Install it first (apt install nikto).[/bold red]")
    except Exception as e:
        console.print(f"[bold red]Unexpected error: {e}[/bold red]")


if __name__ == "__main__":
    # Example usage
    target = input("Enter target domain/IP: ")
    port = input("Enter port (default 80/443): ").strip()
    port = int(port) if port else None
    ssl = input("Use SSL? (y/n): ").lower().startswith("y")
    output_file = input("Save output to file? (leave blank for none): ").strip() or None

    run_nikto(target, port, ssl, output_file)
